import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Configura√ß√µes de visualiza√ß√£o
sns.set_style("whitegrid")
plt.rcParams['figure.figsize'] = (12, 6)

# Ler dados
df = pd.read_table('2004-2021.tsv')

# Remover colunas de data problem√°ticas
df = df.drop(['DATA INICIAL', 'DATA FINAL'], axis=1)

# Converter colunas de pre√ßos
cols_dist = [
    'PRE√áO M√âDIO DISTRIBUI√á√ÉO',
    'DESVIO PADR√ÉO DISTRIBUI√á√ÉO',
    'PRE√áO M√çNIMO DISTRIBUI√á√ÉO',
    'PRE√áO M√ÅXIMO DISTRIBUI√á√ÉO',
    'COEF DE VARIA√á√ÉO DISTRIBUI√á√ÉO',
    'MARGEM M√âDIA REVENDA'
]

for col in cols_dist:
    df[col] = df[col].replace('-', None)
    df[col] = df[col].astype(str).str.replace(',', '.', regex=False)
    df[col] = pd.to_numeric(df[col], errors='coerce')

# Converter colunas de revenda
cols_revenda = [
    'PRE√áO M√âDIO REVENDA',
    'DESVIO PADR√ÉO REVENDA',
    'PRE√áO M√çNIMO REVENDA',
    'PRE√áO M√ÅXIMO REVENDA',
    'MARGEM M√âDIA REVENDA',
    'COEF DE VARIA√á√ÉO REVENDA'
]

for col in cols_revenda:
    if col in df.columns:
        df[col] = df[col].astype(str).str.replace(',', '.', regex=False)
        df[col] = pd.to_numeric(df[col], errors='coerce')

print("="*80)
print("üìä AN√ÅLISE DE PRE√áOS DE COMBUST√çVEIS (2004-2021)")
print("="*80)

# 1. Vis√£o Geral
print("\n1Ô∏è‚É£ VIS√ÉO GERAL DO DATASET")
print(f"   Total de registros: {len(df):,}")
print(f"   Produtos analisados: {df['PRODUTO'].nunique()}")
print(f"   Estados cobertos: {df['ESTADO'].nunique()}")
print(f"   Regi√µes: {df['REGI√ÉO'].nunique()}")

# 2. Distribui√ß√£o por Produto
print("\n2Ô∏è‚É£ REGISTROS POR TIPO DE COMBUST√çVEL")
print(df['PRODUTO'].value_counts())

# 3. An√°lise de Pre√ßos por Produto
print("\n3Ô∏è‚É£ PRE√áOS M√âDIOS POR PRODUTO (Revenda)")
precos_produto = df.groupby('PRODUTO')['PRE√áO M√âDIO REVENDA'].agg(['mean', 'std', 'min', 'max'])
precos_produto.columns = ['M√©dia', 'Desvio Padr√£o', 'M√≠nimo', 'M√°ximo']
print(precos_produto.round(3))

# 4. An√°lise por Regi√£o
print("\n4Ô∏è‚É£ PRE√áO M√âDIO DE REVENDA POR REGI√ÉO")
precos_regiao = df.groupby('REGI√ÉO')['PRE√áO M√âDIO REVENDA'].mean().sort_values(ascending=False)
print(precos_regiao.round(3))

# 5. Margem M√©dia por Regi√£o
print("\n5Ô∏è‚É£ MARGEM M√âDIA DE REVENDA POR REGI√ÉO")
margem_regiao = df.groupby('REGI√ÉO')['MARGEM M√âDIA REVENDA'].mean().sort_values(ascending=False)
print(margem_regiao.round(3))

# 6. Top 10 Estados Mais Caros
print("\n6Ô∏è‚É£ TOP 10 ESTADOS COM COMBUST√çVEL MAIS CARO")
estados_caros = df.groupby('ESTADO')['PRE√áO M√âDIO REVENDA'].mean().sort_values(ascending=False).head(10)
print(estados_caros.round(3))

# 7. An√°lise de Variabilidade
print("\n7Ô∏è‚É£ ESTADOS COM MAIOR VARIA√á√ÉO DE PRE√áOS")
variacao_estados = df.groupby('ESTADO')['COEF DE VARIA√á√ÉO REVENDA'].mean().sort_values(ascending=False).head(10)
print(variacao_estados.round(3))

# VISUALIZA√á√ïES
fig, axes = plt.subplots(2, 2, figsize=(16, 12))

# Gr√°fico 1: Pre√ßo M√©dio por Produto
ax1 = axes[0, 0]
precos_produto_plot = df.groupby('PRODUTO')['PRE√áO M√âDIO REVENDA'].mean().sort_values()
precos_produto_plot.plot(kind='barh', ax=ax1, color='steelblue')
ax1.set_title('Pre√ßo M√©dio de Revenda por Produto', fontsize=14, fontweight='bold')
ax1.set_xlabel('Pre√ßo (R$/L)', fontsize=12)
ax1.set_ylabel('')

# Gr√°fico 2: Pre√ßo por Regi√£o
ax2 = axes[0, 1]
precos_regiao.plot(kind='bar', ax=ax2, color='coral')
ax2.set_title('Pre√ßo M√©dio por Regi√£o', fontsize=14, fontweight='bold')
ax2.set_xlabel('')
ax2.set_ylabel('Pre√ßo (R$/L)', fontsize=12)
ax2.tick_params(axis='x', rotation=45)

# Gr√°fico 3: Margem por Regi√£o
ax3 = axes[1, 0]
margem_regiao.plot(kind='bar', ax=ax3, color='lightgreen')
ax3.set_title('Margem M√©dia de Revenda por Regi√£o', fontsize=14, fontweight='bold')
ax3.set_xlabel('')
ax3.set_ylabel('Margem (R$/L)', fontsize=12)
ax3.tick_params(axis='x', rotation=45)

# Gr√°fico 4: Top 10 Estados Mais Caros
ax4 = axes[1, 1]
estados_caros.plot(kind='barh', ax=ax4, color='salmon')
ax4.set_title('Top 10 Estados Mais Caros', fontsize=14, fontweight='bold')
ax4.set_xlabel('Pre√ßo (R$/L)', fontsize=12)
ax4.set_ylabel('')

plt.tight_layout()
plt.savefig('analise_combustiveis.png', dpi=300, bbox_inches='tight')
plt.show()

# An√°lise adicional: Gasolina vs Etanol
print("\n8Ô∏è‚É£ COMPARA√á√ÉO GASOLINA x ETANOL")
if 'GASOLINA COMUM' in df['PRODUTO'].values and 'ETANOL HIDRATADO' in df['PRODUTO'].values:
    gasolina = df[df['PRODUTO'] == 'GASOLINA COMUM']['PRE√áO M√âDIO REVENDA'].mean()
    etanol = df[df['PRODUTO'] == 'ETANOL HIDRATADO']['PRE√áO M√âDIO REVENDA'].mean()
    
    print(f"   Gasolina Comum: R$ {gasolina:.3f}/L")
    print(f"   Etanol Hidratado: R$ {etanol:.3f}/L")
    print(f"   Raz√£o Etanol/Gasolina: {(etanol/gasolina):.2%}")
    print(f"   {'‚úÖ Etanol vale a pena!' if (etanol/gasolina) < 0.70 else '‚ùå Gasolina √© mais vantajosa'}")

print("\n" + "="*80)
print("‚úÖ An√°lise conclu√≠da! Gr√°ficos salvos em 'analise_combustiveis.png'")
print("="*80)